package com.ktds.jmj.filter;

import java.io.IOException;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import com.ktds.jmj.member.vo.MemberVO;

/**
 * Servlet Filter implementation class SessionCheckFilter
 */
public class SessionCheckFilter implements Filter {

    /**
     * Default constructor. 
     */
    public SessionCheckFilter() {
    }

	/**
	 * @see Filter#destroy()
	 */
	public void destroy() {
	}

	/**
	 * @see Filter#doFilter(ServletRequest, ServletResponse, FilterChain)
	 */
	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {
		
		// 인스턴스와 클래스 관계는 부모와 자식 관계에서 상속관계이다.(?)
		// 기존에 썼던 HttpServletRequest는 ServletRequest의 한 종류이다.
		// 그러므로 ServletRequest를 HttpServletRequest로 캐스팅 시켜줘야한다.
		HttpServletRequest req = (HttpServletRequest) request;
		HttpSession session = req.getSession();
		
		MemberVO member = (MemberVO) session.getAttribute("_MEMBER_"); // 넣은 데이터를 가져온다. MemberBiz에서 setAttribute로 넣어주었으므로 _MEMBER_를 가져온다.
		
		// pass the request along the filter chain
		chain.doFilter(request, response);
	}

	/**
	 * @see Filter#init(FilterConfig)
	 */
	public void init(FilterConfig fConfig) throws ServletException {
	}

}
