package com.ktds.jmj.member.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.ktds.jmj.member.vo.ArticleVO;
import com.ktds.jmj.util.xml.XML;

public class ArticleDAO {
	
	public List<ArticleVO> getArticleInfo() {
		
		loadOracleDriver();
		
		Connection conn = null;
		PreparedStatement stmt = null;
		ResultSet rs = null;
		
		List<ArticleVO> articles = new ArrayList<ArticleVO>();
		
		try {
			conn = DriverManager.getConnection(Const.DB_URL, Const.DB_USER, Const.DB_PASSWORD);
			String query = XML.getNodeString("//query/article/getArticleInfo/text()");
			stmt = conn.prepareStatement(query);
		
			rs = stmt.executeQuery();
			
			ArticleVO article = null;
			while ( rs.next() ) {
				article = new ArticleVO();
				article.setArticleId(rs.getInt("ARTICLE_ID"));
				article.setDescript(rs.getString("DESCRIPT"));
				article.setHits(rs.getInt("HITS"));
				article.setMemberId(rs.getString("MEMBER_ID"));
				article.setRecommends(rs.getInt("RECOMMENDS"));
				article.setTitle(rs.getString("TITLE"));
				article.setNickName(rs.getString("NICK_NAME"));
				
				articles.add(article);
			}
			
		} catch (SQLException e) {
			throw new RuntimeException(e.getMessage(), e);
		}
		finally {
			closeDB(conn, stmt, rs);
		}
		
		return articles;
		
	}
	
	public ArticleVO getOneArticleInfoByArticleId( int articleId ) {

		loadOracleDriver();
		
		Connection conn = null;
		PreparedStatement stmt = null;
		ResultSet rs = null;
		
		ArticleVO article = new ArticleVO();
		
		try {
			conn = DriverManager.getConnection(Const.DB_URL, Const.DB_USER, Const.DB_PASSWORD);
			String query = XML.getNodeString("//query/article/getOneArticleInfoByArticleId/text()");
			stmt = conn.prepareStatement(query);
			
			stmt.setInt(1, articleId );
			rs = stmt.executeQuery();
			
			
			if( rs.next() ){
				
				article.setArticleId(rs.getInt("ARTICLE_ID"));
				article.setDescript(rs.getString("DESCRIPT"));
				article.setHits(rs.getInt("HITS"));
				article.setRecommends(rs.getInt("RECOMMENDS"));
				article.setTitle(rs.getString("TITLE"));
				article.setNickName(rs.getString("NICK_NAME"));
				article.setMemberId(rs.getString("MEMBER_ID"));
				
			}
			
		} catch (SQLException e) {
			throw new RuntimeException(e.getMessage(), e);
		}
		finally {
			closeDB(conn, stmt, rs);
		}
		
		return article;	
			
	}
	
	public List<ArticleVO> getCountHits(int articleId) {
		
		loadOracleDriver();
		
		Connection conn = null;
		PreparedStatement stmt = null;
		ResultSet rs = null;
		
		List<ArticleVO> articles = new ArrayList<ArticleVO>();
		
		try {
			conn = DriverManager.getConnection(Const.DB_URL, Const.DB_USER, Const.DB_PASSWORD);
			String query = XML.getNodeString("//query/article/getOneArticleInfoByArticleId/text()");
			stmt = conn.prepareStatement(query);
			
			stmt.setInt(1, articleId);
			rs = stmt.executeQuery();
			
			ArticleVO article = new ArticleVO();
			
			if( rs.next() ) {
								
				article.setArticleId(rs.getInt("ARTICLE_ID"));
				article.setDescript(rs.getString("DESCRIPT"));
				article.setHits(rs.getInt("HITS") + 1);
				article.setMemberId(rs.getString("MEMBER_ID"));
				article.setRecommends(rs.getInt("RECOMMENDS"));
				article.setTitle(rs.getString("TITLE"));
				article.setNickName(rs.getString("NICK_NAME"));
				
				articles.add(article);
			}
			
		} catch (SQLException e) {
			throw new RuntimeException(e.getMessage(), e);
		}
		finally {
			closeDB(conn, stmt, rs);
		}
		
		return articles;
		
	}
	
	private ArticleVO getUpdateHits( int articleId ) {
		
		loadOracleDriver();
		
		Connection conn = null;
		PreparedStatement stmt = null;
		ResultSet rs = null;
		
		ArticleVO article = new ArticleVO();
		
		try {
			conn = DriverManager.getConnection(Const.DB_URL, Const.DB_USER, Const.DB_PASSWORD);
			String query = XML.getNodeString("//query/article/getUpdateHits/text()");
			stmt = conn.prepareStatement(query);
			
			stmt.setInt(1, articleId );
			rs = stmt.executeQuery();
			
		} catch (SQLException e) {
			throw new RuntimeException(e.getMessage(), e);
		}
		finally {
			closeDB(conn, stmt, rs);
		}
		
		return article;	
	}
	
	/**
	 * Oracle Driver
	 */
	private void loadOracleDriver() {
		try {
			Class.forName("oracle.jdbc.driver.OracleDriver");
		} catch (ClassNotFoundException e) {
			throw new RuntimeException(e.getMessage(), e);
		}
	}
	
	/**
	 * Close DB
	 */
	private void closeDB(Connection conn, PreparedStatement stmt, ResultSet rs) {
		if ( rs != null ) {
			try {
				rs.close();
			} catch (SQLException e) {
			}
		}
		if ( stmt != null ) {
			try {
				stmt.close();
			} catch (SQLException e) {
			}
		}
		if ( conn != null ) {
			try {
				conn.close();
			} catch (SQLException e) {
			}
		}
	}
	
}
