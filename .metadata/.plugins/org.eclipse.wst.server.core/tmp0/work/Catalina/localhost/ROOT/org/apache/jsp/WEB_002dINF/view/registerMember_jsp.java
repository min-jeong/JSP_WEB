/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2016-03-09 03:58:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class registerMember_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1456288801943L));
    _jspx_dependants.put("jar:file:/C:/Users/206-001/workspace/JSP_WEB/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Article/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1090214156000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/resource/js/jquery-1.12.1.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t$(document).ready( function() {\r\n");
      out.write("\t    \r\n");
      out.write("\t    $(\"#addNewMember\").click(function() {\r\n");
      out.write("\t    \t\r\n");
      out.write("\t\t\tvar id = $(\"#id\").val();\r\n");
      out.write("\t\t\t   id = $.trim( id );\r\n");
      out.write("\t\t\t      if ( id == \"\" ) {\r\n");
      out.write("\t\t\t       alert(\"id을 입력하세요!\");\r\n");
      out.write("\t\t\t       $(\"#id\").focus();\r\n");
      out.write("\t\t\t       return;\r\n");
      out.write("\t\t\t      }\r\n");
      out.write("\t       \r\n");
      out.write("\t       var nickName = $(\"#nickName\").val();\r\n");
      out.write("\t       nickName = $.trim( nickName );\r\n");
      out.write("           if ( nickName == \"\" ) {\r\n");
      out.write("\t           alert(\"NICKNAME을 입력하세요!\");\r\n");
      out.write("\t           $(\"#nickName\").focus();\r\n");
      out.write("\t           return;\r\n");
      out.write("           }\r\n");
      out.write("           \r\n");
      out.write("           var password = $(\"#password\").val();\r\n");
      out.write("           password = $.trim( password );\r\n");
      out.write("           if ( password == \"\" ) {\r\n");
      out.write("\t           alert(\"비밀번호를 입력하세요!\");\r\n");
      out.write("\t           $(\"#password\").focus();\r\n");
      out.write("\t           return;\r\n");
      out.write("           }\r\n");
      out.write("           \r\n");
      out.write("           var email = $(\"#email\").val();\r\n");
      out.write("           email = $.trim( email );\r\n");
      out.write("           if ( email == \"\" ) {\r\n");
      out.write("\t           alert(\"이메일을 입력하세요!\");\r\n");
      out.write("\t           $(\"#email\").focus();\r\n");
      out.write("\t           return;\r\n");
      out.write("           }\r\n");
      out.write("\t   \r\n");
      out.write("\t       var form = $(\"#addNewMemberForm\");\r\n");
      out.write("\t       form.attr(\"method\", \"POST\");\r\n");
      out.write("\t       form.attr(\"action\", \"/addNewMember\");\r\n");
      out.write("\t       form.submit();\r\n");
      out.write("\t       \r\n");
      out.write("\t    } );\r\n");
      out.write("\t    \r\n");
      out.write("\t });\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<h1> 회원가입 </h1>\r\n");
      out.write("\t<hr/>\r\n");
      out.write("\t<form id=\"addNewMemberForm\">\r\n");
      out.write("\t\tID : <input type=\"text\" id=\"id\" name=\"id\" /><br/>\r\n");
      out.write("\t\tNICK NAME : <input type=\"text\" id=\"nickName\" name=\"nickName\" /><br/>\r\n");
      out.write("\t\tPASSWORD : <input type=\"text\" id=\"password\" name=\"password\" /><br/>\r\n");
      out.write("\t\tEMAIL : <input type=\"text\" id=\"email\" name=\"email\" /><br/>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<input type=\"button\" id=\"addNewMember\" value=\"회원가입\" />\r\n");
      out.write("\t</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
